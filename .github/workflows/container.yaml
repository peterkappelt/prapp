name: Build container
on:
  push:
    paths:
      - frontend/**
      - backend/**
      - .github/workflows/container.yaml
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  frontend-lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        working-directory: ./frontend
        run: yarn install --dev
      - name: Run linter
        working-directory: ./frontend
        run: yarn lint
  frontend-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        working-directory: ./frontend
        run: yarn install --dev
      - name: Generate .env
        working-directory: ./frontend
        run: echo "VITE_BACKEND_URL=/" > .env
      - name: Generate API code
        working-directory: ./frontend
        run: yarn apigen
      - name: Build site
        working-directory: ./frontend
        run: yarn build
      - name: Upload build frontend as artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: ./frontend/dist
  backend-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
      - name: GHCR login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend
      - name: Build and push container
        uses: docker/build-push-action@v5
        with:
          context: backend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
