openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/executions/{id}/:
    get:
      operationId: executions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this execution.
        required: true
      tags:
      - executions
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: ''
  /api/executions/{id}/mark_step/:
    post:
      operationId: executions_mark_step
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this execution.
        required: true
      tags:
      - executions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionMarkStepRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExecutionMarkStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExecutionMarkStepRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: ''
  /api/processes/:
    get:
      operationId: processes_list
      tags:
      - processes
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Process'
          description: ''
    post:
      operationId: processes_create
      tags:
      - processes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProcessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: ''
  /api/processes/{revision}/:
    get:
      operationId: processes_retrieve
      parameters:
      - in: path
        name: revision
        schema:
          type: string
          format: uuid
        description: Process ID found in meta.id
        required: true
      tags:
      - processes
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: ''
    put:
      operationId: processes_update
      parameters:
      - in: path
        name: revision
        schema:
          type: string
          format: uuid
        description: Process ID found in meta.id
        required: true
      tags:
      - processes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProcessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: ''
  /api/processes/{revision}/executions/:
    get:
      operationId: processes_executions_list
      parameters:
      - in: path
        name: revision
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this process.
        required: true
      tags:
      - processes
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExecutionShallow'
          description: ''
  /api/processes/{revision}/start_execution/:
    post:
      operationId: processes_start_execution
      parameters:
      - in: path
        name: revision
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this process.
        required: true
      tags:
      - processes
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Execution:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        initiatedAt:
          type: string
          format: date-time
          readOnly: true
        initiatedBy:
          type: integer
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          readOnly: true
        process:
          $ref: '#/components/schemas/ProcessExecution'
      required:
      - id
      - initiatedAt
      - initiatedBy
      - process
      - state
    ExecutionMarkStepRequest:
      type: object
      properties:
        mark_as:
          $ref: '#/components/schemas/MarkAsEnum'
        step_idx:
          type: integer
      required:
      - mark_as
      - step_idx
    ExecutionShallow:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        initiatedAt:
          type: string
          format: date-time
          readOnly: true
        initiatedBy:
          type: integer
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          readOnly: true
      required:
      - id
      - initiatedAt
      - initiatedBy
      - state
    MarkAsEnum:
      enum:
      - StepStarted
      - StepDone
      type: string
      description: |-
        * `StepStarted` - StepStarted
        * `StepDone` - StepDone
    Meta:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: integer
          readOnly: true
      required:
      - createdAt
      - createdBy
      - id
    Process:
      type: object
      properties:
        revision:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        createdAt:
          type: string
          format: date-time
          readOnly: true
        meta:
          allOf:
          - $ref: '#/components/schemas/Meta'
          readOnly: true
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Step'
      required:
      - createdAt
      - meta
      - revision
      - steps
      - title
    ProcessExecution:
      type: object
      properties:
        revision:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        createdAt:
          type: string
          format: date-time
          readOnly: true
        meta:
          allOf:
          - $ref: '#/components/schemas/Meta'
          readOnly: true
        steps:
          type: array
          items:
            $ref: '#/components/schemas/StepExecution'
      required:
      - createdAt
      - meta
      - revision
      - steps
      - title
    ProcessRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        steps:
          type: array
          items:
            $ref: '#/components/schemas/StepRequest'
      required:
      - steps
      - title
    StateEnum:
      enum:
      - done
      - started
      type: string
    Step:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        type:
          $ref: '#/components/schemas/TypeEnum'
        description:
          type: string
      required:
      - title
      - type
    StepExecution:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        type:
          $ref: '#/components/schemas/TypeEnum'
        description:
          type: string
        startedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        startedBy:
          type: integer
          nullable: true
          readOnly: true
        doneAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        doneBy:
          type: integer
          nullable: true
          readOnly: true
      required:
      - doneAt
      - doneBy
      - startedAt
      - startedBy
      - title
      - type
    StepRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        type:
          $ref: '#/components/schemas/TypeEnum'
        description:
          type: string
      required:
      - title
      - type
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TypeEnum:
      enum:
      - SE
      - ST
      type: string
      description: |-
        * `SE` - Section
        * `ST` - Step
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
